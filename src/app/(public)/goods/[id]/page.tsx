'use client'

import React, { useMemo, useState } from 'react'
import { useParams } from 'next/navigation'
import { motion } from 'framer-motion'
import styled from 'styled-components'
import Link from 'next/link'
import WBIcon from '@/shared/icons/WBIcon'
import OzonIcon from '@/shared/icons/OzonIcon'
import WbButton from '@/shared/ui/WbButton/WbButton'
import OzonBtn from '@/shared/ui/OzonBtn/OzonBtn'

/* ============ MOCK DATA (–ø–æ–¥—Ä—É–∂–µ–Ω —Å —Ç–≤–æ–∏–º –ª–∏—Å—Ç–∏–Ω–≥–æ–º) ============ */
type LabelTone = 'hot' | 'new' | 'sale' | 'limited' | 'mild'
type Label = { text: string; tone: LabelTone }
type Product = {
	id: number
	name: string
	slug: string
	price: number
	oldPrice?: number
	images: string[]
	badges?: Label[]
	short: string
	description: string
	specs: Record<string, string>
	ingredients?: string
	shipping?: string
	wbUrl?: string
	ozonUrl?: string
}

const PRODUCTS: Product[] = [
	{
		id: 1,
		slug: 'spicy-box',
		name: 'TARIMI Spicy Box',
		price: 799,
		oldPrice: 999,
		images: ['/images/ramens/spicy.png', '/images/ramens/dorama.png'],
		badges: [{ text: '–•–∏—Ç', tone: 'hot' }],
		short: '–û—Å—Ç—Ä—ã–π –Ω–∞–±–æ—Ä —Å –∫–æ—Ä–µ–π—Å–∫–∏–º –≤–∞–π–±–æ–º üå∂Ô∏è',
		description:
			'–¢—Ä–∏ –ø–æ—Ä—Ü–∏–∏ —Ä–∞–º–µ–Ω–∞ —Å —Ä–∞–∑–Ω–æ–π —Å—Ç–µ–ø–µ–Ω—å—é –æ–≥–Ω—è, –ø–∞–ª–æ—á–∫–∏, —Å–æ—É—Å, –∫–∏–º—á–∏ –∏ –º–∞–ª–µ–Ω—å–∫–∏–π —Å—é—Ä–ø—Ä–∏–∑. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥ –≤–µ—á–µ—Ä –¥–æ—Ä–∞–º—ã.',
		specs: {
			–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è: '3√ó —Ä–∞–º–µ–Ω, –ø–∞–ª–æ—á–∫–∏, —Å–æ—É—Å, –∫–∏–º—á–∏, —Å—Ç–∏–∫–µ—Ä',
			'–°—Ç—Ä–∞–Ω–∞ –≤–∫—É—Å–∞': '–ö–æ—Ä–µ—è',
			'–°—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏': '—Å–º. –Ω–∞ —É–ø–∞–∫–æ–≤–∫–µ',
			'–í–µ—Å –Ω–∞–±–æ—Ä–∞ ~': '0.7‚Äì0.9 –∫–≥',
			'–¢–∏–ø –∫–æ—Ä–æ–±–∫–∏': '220√ó165√ó100 –º–º, –º–∏–∫—Ä–æ–≥–æ—Ñ—Ä–∞',
		},
		ingredients:
			'–°–æ—Å—Ç–∞–≤ —Å–º. –Ω–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–µ —Ä–∞–º–µ–Ω–∞ –∏ —Å–Ω–µ–∫–æ–≤. –í–æ–∑–º–æ–∂–Ω—ã —Å–ª–µ–¥—ã –≥–ª—é—Ç–µ–Ω–∞, —Å–æ–∏, –∫—É–Ω–∂—É—Ç–∞.',
		shipping:
			'–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–§. –°–∞–º–æ–≤—ã–≤–æ–∑/–°–î–≠–ö. –û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π. –í–æ–∑–≤—Ä–∞—Ç –Ω–µ —Å–∫—Ä—ã—Ç–æ–π/–Ω–µ—Ä–∞—Å–ø–µ—á–∞—Ç–∞–Ω–Ω–æ–π –µ–¥—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 7 –¥–Ω–µ–π.',
		wbUrl: 'https://www.wildberries.ru/',
		ozonUrl: 'https://www.ozon.ru/',
	},
	{
		id: 2,
		slug: 'dorama-box',
		name: 'TARIMI Dorama Box',
		price: 749,
		images: ['/images/ramens/dorama.png'],
		badges: [{ text: '–ù–æ–≤–∏–Ω–∫–∞', tone: 'new' }],
		short: '–ú—è–≥–∫–∏–π –∏ —É—é—Ç–Ω—ã–π –Ω–∞–±–æ—Ä –¥–ª—è –≤–µ—á–µ—Ä–æ–≤ –ø–æ–¥ –¥–æ—Ä–∞–º—É üèÆ',
		description:
			'–¢—Ä–∏ –ª—é–±–∏–º—ã—Ö –≤–∫—É—Å–∞, –∞–∫—Ü–µ–Ω—Ç –Ω–∞ –º—è–≥–∫—É—é –æ—Å—Ç—Ä–æ—Ç—É, –ø–∞–ª–æ—á–∫–∏ –∏ –ø—Ä–∏—è—Ç–Ω—ã–µ –º–µ–ª–æ—á–∏. Seoul-–≤–µ—á–µ—Ä –¥–æ–º–∞ ‚Äî –ª–µ–≥–∫–æ –∏ –∫—Ä–∞—Å–∏–≤–æ.',
		specs: {
			–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è: '3√ó —Ä–∞–º–µ–Ω, –ø–∞–ª–æ—á–∫–∏, —Å–æ—É—Å, –∫–∏–º—á–∏, —Å—Ç–∏–∫–µ—Ä',
			'–°—Ç—Ä–∞–Ω–∞ –≤–∫—É—Å–∞': '–ö–æ—Ä–µ—è',
			'–†–∞–∑–º–µ—Ä –∫–æ—Ä–æ–±–∫–∏': '220√ó165√ó100 –º–º',
		},
		shipping:
			'–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–§. –°–∞–º–æ–≤—ã–≤–æ–∑/–°–î–≠–ö. –û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π. –í–æ–∑–≤—Ä–∞—Ç –Ω–µ —Å–∫—Ä—ã—Ç–æ–π/–Ω–µ—Ä–∞—Å–ø–µ—á–∞—Ç–∞–Ω–Ω–æ–π –µ–¥—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 7 –¥–Ω–µ–π.',
		wbUrl: 'https://www.wildberries.ru/',
	},
	{
		id: 3,
		slug: 'cheesy-box',
		name: 'TARIMI Cheese Box',
		price: 779,
		images: ['/images/ramens/cheesy.png'],
		badges: [{ text: 'Limited', tone: 'limited' }],
		short: '–°—ã—Ä–Ω—ã–π –Ω–∞–±–æ—Ä –¥–ª—è –Ω–µ–∂–Ω–æ–≥–æ, —Ç—è–Ω—É—á–µ–≥–æ –≤–∞–π–±–∞ üßÄ',
		description:
			'–ù–µ–∂–Ω—ã–µ —Å–ª–∏–≤–æ—á–Ω–æ-—Å—ã—Ä–Ω—ã–µ –≤–∫—É—Å—ã, —á—É—Ç—å –ø–∏–∫–∞–Ω—Ç–Ω–æ—Å—Ç–∏, –ø–∞–ª–æ—á–∫–∏ –∏ –º–∞–ª–µ–Ω—å–∫–∞—è –≤–∫—É—Å–Ω—è—à–∫–∞ –≤ –ø–æ–¥–∞—Ä–æ–∫.',
		specs: {
			–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è: '3√ó —Ä–∞–º–µ–Ω, –ø–∞–ª–æ—á–∫–∏, —Å–æ—É—Å, —Å—Ç–∏–∫–µ—Ä',
			'–°—Ç—Ä–∞–Ω–∞ –≤–∫—É—Å–∞': '–ö–æ—Ä–µ—è',
		},
		shipping:
			'–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–§. –°–∞–º–æ–≤—ã–≤–æ–∑/–°–î–≠–ö. –û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π. –í–æ–∑–≤—Ä–∞—Ç –Ω–µ —Å–∫—Ä—ã—Ç–æ–π/–Ω–µ—Ä–∞—Å–ø–µ—á–∞—Ç–∞–Ω–Ω–æ–π –µ–¥—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 7 –¥–Ω–µ–π.',
	},
]

/* ============ PAGE ============ */
export default function ProductPage() {
	const params = useParams() as { id?: string }
	// –ø–æ–¥–¥–µ—Ä–∂–∏–º –∫–∞–∫ /sets/1 —Ç–∞–∫ –∏ /sets/spicy-box
	const product = useMemo(() => {
		const pid = Number(params?.id)
		return PRODUCTS.find(
			p => p.id === pid || p.slug === (params?.id || '').toString()
		)
	}, [params])

	const [activeImg, setActiveImg] = useState(0)
	const [tab, setTab] = useState<'desc' | 'specs' | 'ingr' | 'ship'>('desc')

	if (!product) {
		return (
			<Empty>
				<h2>–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</h2>
				<Link href='/goods'>‚Üê –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç–æ–≤–∞—Ä–∞–º</Link>
			</Empty>
		)
	}

	return (
		<Wrap>
			<Breadcrumbs>
				<Link href='/'>–ì–ª–∞–≤–Ω–∞—è</Link> <span>‚Ä¢</span>
				<Link href='/goods'>–¢–æ–≤–∞—Ä—ã</Link> <span>‚Ä¢</span>
				<span>{product.name}</span>
			</Breadcrumbs>

			<Grid>
				{/* LEFT: GALLERY */}
				<Left>
					<Sticky>
						<MainImg
							as={motion.div}
							initial={{ opacity: 0, scale: 0.98 }}
							animate={{ opacity: 1, scale: 1 }}
							transition={{ duration: 0.4 }}
						>
							<img
								src={product.images[activeImg] ?? product.images[0]}
								alt={product.name}
							/>
						</MainImg>

						{product.images.length > 1 && (
							<Thumbs>
								{product.images.map((src, i) => (
									<button
										key={i}
										aria-label={`img-${i}`}
										data-active={i === activeImg}
										onClick={() => setActiveImg(i)}
									>
										<img src={src} alt={`${product.name} ${i + 1}`} />
									</button>
								))}
							</Thumbs>
						)}
					</Sticky>
				</Left>

				{/* RIGHT: INFO */}
				<Right>
					<TitleRow>
						<h1>{product.name}</h1>
						{product.badges?.map((b, i) => (
							<Badge key={i} data-tone={b.tone}>
								{b.text}
							</Badge>
						))}
					</TitleRow>

					<Short>{product.short}</Short>

					<PriceRow>
						<div className='price'>
							<strong>{product.price} ‚ÇΩ</strong>
							{product.oldPrice && <s>{product.oldPrice} ‚ÇΩ</s>}
						</div>
						<div className='cta'>
							{product.wbUrl && (
								<WbButton
									as='a'
									href={product.wbUrl}
									target='_blank'
									rel='noreferrer'
								>
									–ö—É–ø–∏—Ç—å –Ω–∞ <WBIcon />
								</WbButton>
							)}
							{product.ozonUrl && (
								<OzonBtn
									as='a'
									href={product.ozonUrl}
									target='_blank'
									rel='noreferrer'
								>
									–ö—É–ø–∏—Ç—å –Ω–∞ <OzonIcon />
								</OzonBtn>
							)}
						</div>
					</PriceRow>

					<Divider />

					{/* Tabs */}
					<Tabs>
						<button data-active={tab === 'desc'} onClick={() => setTab('desc')}>
							–û–ø–∏—Å–∞–Ω–∏–µ
						</button>
						<button
							data-active={tab === 'specs'}
							onClick={() => setTab('specs')}
						>
							–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
						</button>
						<button data-active={tab === 'ingr'} onClick={() => setTab('ingr')}>
							–°–æ—Å—Ç–∞–≤
						</button>
						<button data-active={tab === 'ship'} onClick={() => setTab('ship')}>
							–î–æ—Å—Ç–∞–≤–∫–∞
						</button>
					</Tabs>

					<TabBody>
						{tab === 'desc' && <p>{product.description}</p>}
						{tab === 'specs' && (
							<SpecTable>
								{Object.entries(product.specs).map(([k, v]) => (
									<li key={k}>
										<span>{k}</span>
										<i />
										<b>{v}</b>
									</li>
								))}
							</SpecTable>
						)}
						{tab === 'ingr' && (
							<p>{product.ingredients ?? '–°–æ—Å—Ç–∞–≤ —Å–º. –Ω–∞ —É–ø–∞–∫–æ–≤–∫–µ.'}</p>
						)}
						{tab === 'ship' && (
							<p>
								{product.shipping ?? '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ –ø–æ—è–≤–∏—Ç—Å—è –ø–æ–∑–∂–µ.'}
							</p>
						)}
					</TabBody>

					<SmallNote>
						* –§–æ—Ç–æ –Ω–æ—Å–∏—Ç –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä. –ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è –º–æ–∂–µ—Ç —Å–ª–µ–≥–∫–∞
						–æ—Ç–ª–∏—á–∞—Ç—å—Å—è (–≤ —Ä–∞–º–∫–∞—Ö –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –Ω–∞–±–æ—Ä–∞).
					</SmallNote>
				</Right>
			</Grid>
		</Wrap>
	)
}

/* ============ STYLES ============ */
const Wrap = styled.main`
	min-height: 100dvh;
	max-width: 1200px;
	margin: 0 auto;
	padding: 8rem 16px 56px;
	color: #fff;
`

const Breadcrumbs = styled.nav`
	font-size: 0.9rem;
	color: rgba(255, 255, 255, 0.6);
	display: flex;
	gap: 0.5rem;
	a {
		color: rgba(255, 255, 255, 0.75);
		text-decoration: none;
		transition: color 0.3s;

		&:hover {
			color: white;
		}
	}
	margin-bottom: 16px;
`

const Grid = styled.section`
	display: grid;
	grid-template-columns: 6fr 6fr;
	gap: 28px;

	@media (max-width: 960px) {
		grid-template-columns: 1fr;
	}
`

const Left = styled.div``
const Sticky = styled.div`
	position: sticky;
	top: 86px;
	display: grid;
	gap: 12px;
`

const MainImg = styled(motion.div)`
	background: rgba(255, 255, 255, 0.04);
	border: 1px solid rgba(255, 255, 255, 0.08);
	border-radius: 16px;
	padding: 16px;
	backdrop-filter: blur(8px);
	box-shadow: 0 0 24px rgba(255, 79, 182, 0.12);

	img {
		width: 100%;
		height: auto;
		display: block;
		object-fit: contain;
	}
`

const Thumbs = styled.div`
	display: flex;

	gap: 10px;
	overflow-x: auto;
	padding-bottom: 4px;

	button {
		background: rgba(255, 255, 255, 0.05);
		width: fit-content;
		border: 1px solid rgba(255, 255, 255, 0.1);
		border-radius: 10px;
		padding: 6px;
		cursor: pointer;
		transition: transform 0.2s ease, border-color 0.2s ease;
	}
	button[data-active='true'] {
		border-color: #00e0ff;
	}
	img {
		width: 76px;
		height: 76px;
		object-fit: contain;
		display: block;
	}
`

const Right = styled.div``

const TitleRow = styled.header`
	display: flex;
	flex-wrap: wrap;
	gap: 10px 14px;
	align-items: center;
	margin-bottom: 8px;

	h1 {
		margin: 0;
		font-size: clamp(1.6rem, 4vw, 2.2rem);
		font-family: 'Geologica';
		background: linear-gradient(90deg, #ff4fb6, #00e0ff);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
	}
`

const Badge = styled.span`
	font-size: 0.75rem;
	padding: 0.25rem 0.55rem;
	border-radius: 999px;
	border: 1px solid rgba(255, 255, 255, 0.18);
	background: rgba(255, 255, 255, 0.06);
	letter-spacing: 0.3px;

	&[data-tone='hot'] {
		border-color: #ff4fb6;
		color: #ffbde5;
	}
	&[data-tone='new'] {
		border-color: #00e0ff;
		color: #c9f7ff;
	}
	&[data-tone='limited'] {
		border-color: #ffd166;
		color: #ffe9b0;
	}
	&[data-tone='sale'] {
		border-color: #9aff8a;
		color: #d8ffd3;
	}
`

const Short = styled.p`
	color: rgba(255, 255, 255, 0.78);
	margin: 6px 0 16px;
`

const PriceRow = styled.div`
	display: flex;
	justify-content: space-between;
	align-items: center;
	gap: 14px;
	flex-wrap: wrap;
	margin-bottom: 14px;

	.price {
		display: flex;
		align-items: center;
		gap: 10px;
		strong {
			font-size: 1.8rem;
		}
		s {
			color: rgba(255, 255, 255, 0.5);
		}
	}
	.cta {
		display: flex;
		gap: 8px;
		flex-wrap: wrap;
		a,
		button {
			white-space: nowrap;
		}
	}
`

const Divider = styled.div`
	height: 1px;
	background: linear-gradient(90deg, #ff4fb6, #00e0ff);
	opacity: 0.35;
	margin: 14px 0 12px;
`

const Tabs = styled.div`
	display: flex;
	gap: 8px;
	flex-wrap: wrap;
	margin-bottom: 8px;
	button {
		border: 1px solid rgba(255, 255, 255, 0.14);
		background: rgba(255, 255, 255, 0.06);
		color: #fff;
		border-radius: 10px;
		padding: 0.5rem 0.8rem;
		cursor: pointer;
		transition: all 0.2s ease;
	}
	button[data-active='true'] {
		border-color: #00e0ff;
		box-shadow: 0 0 16px rgba(0, 224, 255, 0.25);
	}
`

const TabBody = styled.div`
	color: rgba(255, 255, 255, 0.8);
	line-height: 1.7;
	p {
		margin: 0;
	}
`

const SpecTable = styled.ul`
	list-style: none;
	margin: 0;
	padding: 0;
	display: grid;
	gap: 8px;
	li {
		display: grid;
		grid-template-columns: 180px 1fr;
		gap: 10px;
		align-items: center;
		background: rgba(255, 255, 255, 0.04);
		border-radius: 10px;
		padding: 0.6rem 0.8rem;
		@media (max-width: 520px) {
			grid-template-columns: 1fr;
		}
	}
	span {
		color: rgba(255, 255, 255, 0.6);
	}
	i {
		display: block;
		height: 1px;
		background: rgba(255, 255, 255, 0.06);
		opacity: 0.6;
	}
	b {
		font-weight: 600;
	}
`

const SmallNote = styled.p`
	margin-top: 12px;
	font-size: 0.85rem;
	color: rgba(255, 255, 255, 0.55);
	backdrop-filter: blur(2px);
`

const Empty = styled.div`
	max-width: 900px;
	margin: 0 auto;
	padding: 60px 16px;
	text-align: center;
	color: #fff;
	a {
		color: #00e0ff;
		text-decoration: none;
	}
`
